Problem Statement:

The NGO wants to start some marketing efforts to increase the donations received from its client base. The NGO does not know which
customers would be willing to pay. Also the NGO does not know how much the client might pay?

Final State: The NGO has a machine learning model which indicates the probabilities of the client responding or not responding back 
to the offers we make. The expected profit is calculated using a confusion matrix and Expected value equation

E() = [p(o1)*v(o1)]+ [p(o2)*v(o2)]+ [p(o3)*v(o3)]+.....+[p(oN)*v(oN)], where N is the total number of outcome variations possible 

Methodology:
Followed the 6 stage framework of CRISP Cross Industry Standard Process of Data mining

1) Business Undersdatning:
The NGO has about 50,000 USD $ set aside for its marketing efforts 
The profit margin from each of the customers is high - Around 2000$
The cost for making the offer and market is also high - Around 100$. Accordingly they have the capabilties to target 50000/100 = 500 customers 
in their list of clientelle.

2) Data understanding:

The data was provided by the NGO itself according to the forms the clientelle had filled up from the past few years.
There were features of the clientelle and also global economic factors included. About 50 features were present in the data.
Both numberic type and categorical type variables were as an input

3) Data preparation:

Normalization: min max normalization was used

Outlier treatment: 
Used the concepts of Graphical based methods to identify outliers and treat them.
Used IQR of a box plot, < Quartile 1- (1.5*IQR), > Quartile 3 + (1.5*IQR) and Histograms

Also, Proximity based outlier detection methods were also used: Distance based outlier detection and density based outlier 
detection methods are used

Clustering-based outlier detectionm methods and Classification-based outlier detection methods (One-class) were used

4) Modelling:

Built probability estimation models using Logistic Regression, Naive - Bayes Regression, SVM, Random forests, Decision trees, K-NN 
models. Did not use discrete classifiers as that outputs only a class label as opposed to a ranking / probability estimation
I have ranked all the test instances according to decreasing score. Now with a ranking classifier plus a threshold produces
a single confusion matrix. Whenever I change the threshold the confusion matrix will also change as the number of False Positives change.

Also, at each point of the change in threshold, the expected value also changes i.e. the profit. The profit in $ amount is plotted
against the percentage of test instances targeted. Here the observation is the profit curve starts at the same point i.e. at 0$ for all 
classifiers and ends at the same point  i.e at -2 Million USD for all classifiers since all the customers/clientelle is being targeted

According to our business understanding, we can target 500 clientelle. I have 2000 clientelle in my validation data set. So 500/2000
will give a 25% of customers should be targeted. At 25% of the test instances, classifier SVM gives the highest profit.
So use the SVM classifier to rank all the unknown data points and take the top 25% of the ranked clientelle to be targetted.
The random classifier which joins the start point 0$ and the negative point -2,000,000 performs the worst, since it has an even chance
of selecting a non responding client or from a responding client.

5) Evaluation:

The difference between the previous years total amount of donation and the year in which the marketing efforts were done is amounting
to around 1.4 Million Dollars

In our case the class priors, the proportion of positive and negative instances in the validation population is stable or certain.
Also plotted the ROC graph - the plot of True positive rate vs False positive rate - for all the classsifiers. 
This helped me to understand the relative trade offs that the classifiers are making between the benefits ( True positives and costs 
(False positives)

Also calculated the Area Under the ROC Curve (AUC). This is obtained as a single number - Area under the classifers curve(Ranking 
+ Confusion matrix) as a fraction of the unit square. Ranged from 0 to 1. This is best when the operating conditions are not known, but
here we know

Also plotted the cumulative responsive curve - plot true positive rate (y axis) vs the % of the population that is targeted (x-axis).
Also plotted the lift curve, the points on the cumulative response curve divided by the diagonal line (y=x) which indicates the random
classifier

6) Deployment:
The analysis was done on a manual basis in Jupyter notebook
